{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, isDate, truthProp, numericProp, getScrollTop, makeStringProp, makeNumericProp } from \"../utils/index.mjs\";\nimport { t, bem, name, getToday, cloneDate, cloneDates, getPrevDay, getNextDay, compareDay, calcDateNum, compareMonth, getDayByOffset } from \"./utils.mjs\";\nimport { raf, useRect, onMountedOrActivated } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Popup } from \"../popup/index.mjs\";\nimport { Button } from \"../button/index.mjs\";\nimport { Toast } from \"../toast/index.mjs\";\nimport CalendarMonth from \"./CalendarMonth.mjs\";\nimport CalendarHeader from \"./CalendarHeader.mjs\";\nconst calendarProps = {\n  show: Boolean,\n  type: makeStringProp(\"single\"),\n  title: String,\n  color: String,\n  round: truthProp,\n  readonly: Boolean,\n  poppable: truthProp,\n  maxRange: makeNumericProp(null),\n  position: makeStringProp(\"bottom\"),\n  teleport: [String, Object],\n  showMark: truthProp,\n  showTitle: truthProp,\n  formatter: Function,\n  rowHeight: numericProp,\n  confirmText: String,\n  rangePrompt: String,\n  lazyRender: truthProp,\n  showConfirm: truthProp,\n  defaultDate: [Date, Array],\n  allowSameDay: Boolean,\n  showSubtitle: truthProp,\n  closeOnPopstate: truthProp,\n  showRangePrompt: truthProp,\n  confirmDisabledText: String,\n  closeOnClickOverlay: truthProp,\n  safeAreaInsetTop: Boolean,\n  safeAreaInsetBottom: truthProp,\n  minDate: {\n    type: Date,\n    validator: isDate,\n    default: getToday\n  },\n  maxDate: {\n    type: Date,\n    validator: isDate,\n    default: () => {\n      const now = getToday();\n      return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());\n    }\n  },\n  firstDayOfWeek: {\n    type: numericProp,\n    default: 0,\n    validator: val => val >= 0 && val <= 6\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"unselect\", \"month-show\", \"over-range\", \"update:show\", \"click-subtitle\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const limitDateRange = (date, minDate = props.minDate, maxDate = props.maxDate) => {\n      if (compareDay(date, minDate) === -1) {\n        return minDate;\n      }\n\n      if (compareDay(date, maxDate) === 1) {\n        return maxDate;\n      }\n\n      return date;\n    };\n\n    const getInitialDate = (defaultDate = props.defaultDate) => {\n      const {\n        type,\n        minDate,\n        maxDate,\n        allowSameDay\n      } = props;\n\n      if (defaultDate === null) {\n        return defaultDate;\n      }\n\n      const now = getToday();\n\n      if (type === \"range\") {\n        if (!Array.isArray(defaultDate)) {\n          defaultDate = [];\n        }\n\n        const start = limitDateRange(defaultDate[0] || now, minDate, allowSameDay ? maxDate : getPrevDay(maxDate));\n        const end = limitDateRange(defaultDate[1] || now, allowSameDay ? minDate : getNextDay(minDate));\n        return [start, end];\n      }\n\n      if (type === \"multiple\") {\n        if (Array.isArray(defaultDate)) {\n          return defaultDate.map(date => limitDateRange(date));\n        }\n\n        return [limitDateRange(now)];\n      }\n\n      if (!defaultDate || Array.isArray(defaultDate)) {\n        defaultDate = now;\n      }\n\n      return limitDateRange(defaultDate);\n    };\n\n    let bodyHeight;\n    const bodyRef = ref();\n    const subtitle = ref(\"\");\n    const currentDate = ref(getInitialDate());\n    const [monthRefs, setMonthRefs] = useRefs();\n    const dayOffset = computed(() => props.firstDayOfWeek ? +props.firstDayOfWeek % 7 : 0);\n    const months = computed(() => {\n      const months2 = [];\n      const cursor = new Date(props.minDate);\n      cursor.setDate(1);\n\n      do {\n        months2.push(new Date(cursor));\n        cursor.setMonth(cursor.getMonth() + 1);\n      } while (compareMonth(cursor, props.maxDate) !== 1);\n\n      return months2;\n    });\n    const buttonDisabled = computed(() => {\n      if (currentDate.value) {\n        if (props.type === \"range\") {\n          return !currentDate.value[0] || !currentDate.value[1];\n        }\n\n        if (props.type === \"multiple\") {\n          return !currentDate.value.length;\n        }\n      }\n\n      return !currentDate.value;\n    });\n\n    const getSelectedDate = () => currentDate.value;\n\n    const onScroll = () => {\n      const top = getScrollTop(bodyRef.value);\n      const bottom = top + bodyHeight;\n      const heights = months.value.map((item, index) => monthRefs.value[index].getHeight());\n      const heightSum = heights.reduce((a, b) => a + b, 0);\n\n      if (bottom > heightSum && top > 0) {\n        return;\n      }\n\n      let height = 0;\n      let currentMonth;\n      const visibleRange = [-1, -1];\n\n      for (let i = 0; i < months.value.length; i++) {\n        const month = monthRefs.value[i];\n        const visible = height <= bottom && height + heights[i] >= top;\n\n        if (visible) {\n          visibleRange[1] = i;\n\n          if (!currentMonth) {\n            currentMonth = month;\n            visibleRange[0] = i;\n          }\n\n          if (!monthRefs.value[i].showed) {\n            monthRefs.value[i].showed = true;\n            emit(\"month-show\", {\n              date: month.date,\n              title: month.getTitle()\n            });\n          }\n        }\n\n        height += heights[i];\n      }\n\n      months.value.forEach((month, index) => {\n        const visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;\n        monthRefs.value[index].setVisible(visible);\n      });\n\n      if (currentMonth) {\n        subtitle.value = currentMonth.getTitle();\n      }\n    };\n\n    const scrollToDate = targetDate => {\n      raf(() => {\n        months.value.some((month, index) => {\n          if (compareMonth(month, targetDate) === 0) {\n            if (bodyRef.value) {\n              monthRefs.value[index].scrollToDate(bodyRef.value, targetDate);\n            }\n\n            return true;\n          }\n\n          return false;\n        });\n        onScroll();\n      });\n    };\n\n    const scrollToCurrentDate = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n\n      if (currentDate.value) {\n        const targetDate = props.type === \"single\" ? currentDate.value : currentDate.value[0];\n\n        if (isDate(targetDate)) {\n          scrollToDate(targetDate);\n        }\n      } else {\n        raf(onScroll);\n      }\n    };\n\n    const init = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n\n      raf(() => {\n        bodyHeight = Math.floor(useRect(bodyRef).height);\n      });\n      scrollToCurrentDate();\n    };\n\n    const reset = (date = getInitialDate()) => {\n      currentDate.value = date;\n      scrollToCurrentDate();\n    };\n\n    const checkRange = date => {\n      const {\n        maxRange,\n        rangePrompt,\n        showRangePrompt\n      } = props;\n\n      if (maxRange && calcDateNum(date) > maxRange) {\n        if (showRangePrompt) {\n          Toast(rangePrompt || t(\"rangePrompt\", maxRange));\n        }\n\n        emit(\"over-range\");\n        return false;\n      }\n\n      return true;\n    };\n\n    const onConfirm = () => {\n      var _a;\n\n      return emit(\"confirm\", (_a = currentDate.value) != null ? _a : cloneDates(currentDate.value));\n    };\n\n    const select = (date, complete) => {\n      const setCurrentDate = date2 => {\n        currentDate.value = date2;\n        emit(\"select\", cloneDates(date2));\n      };\n\n      if (complete && props.type === \"range\") {\n        const valid = checkRange(date);\n\n        if (!valid) {\n          setCurrentDate([date[0], getDayByOffset(date[0], +props.maxRange - 1)]);\n          return;\n        }\n      }\n\n      setCurrentDate(date);\n\n      if (complete && !props.showConfirm) {\n        onConfirm();\n      }\n    };\n\n    const getDisabledDate = (disabledDays2, startDay, date) => {\n      var _a;\n\n      return (_a = disabledDays2.find(day => compareDay(startDay, day.date) === -1 && compareDay(day.date, date) === -1)) == null ? void 0 : _a.date;\n    };\n\n    const disabledDays = computed(() => monthRefs.value.reduce((arr, ref2) => {\n      var _a, _b;\n\n      arr.push(...((_b = (_a = ref2.disabledDays) == null ? void 0 : _a.value) != null ? _b : []));\n      return arr;\n    }, []));\n\n    const onClickDay = item => {\n      if (props.readonly || !item.date) {\n        return;\n      }\n\n      const {\n        date\n      } = item;\n      const {\n        type\n      } = props;\n\n      if (type === \"range\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n\n        const [startDay, endDay] = currentDate.value;\n\n        if (startDay && !endDay) {\n          const compareToStart = compareDay(date, startDay);\n\n          if (compareToStart === 1) {\n            const disabledDay = getDisabledDate(disabledDays.value, startDay, date);\n\n            if (disabledDay) {\n              const endDay2 = getPrevDay(disabledDay);\n\n              if (compareDay(startDay, endDay2) === -1) {\n                select([startDay, endDay2]);\n              } else {\n                select([date]);\n              }\n            } else {\n              select([startDay, date], true);\n            }\n          } else if (compareToStart === -1) {\n            select([date]);\n          } else if (props.allowSameDay) {\n            select([date, date], true);\n          }\n        } else {\n          select([date]);\n        }\n      } else if (type === \"multiple\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n\n        const dates = currentDate.value;\n        const selectedIndex = dates.findIndex(dateItem => compareDay(dateItem, date) === 0);\n\n        if (selectedIndex !== -1) {\n          const [unselectedDate] = dates.splice(selectedIndex, 1);\n          emit(\"unselect\", cloneDate(unselectedDate));\n        } else if (props.maxRange && dates.length >= props.maxRange) {\n          Toast(props.rangePrompt || t(\"rangePrompt\", props.maxRange));\n        } else {\n          select([...dates, date]);\n        }\n      } else {\n        select(date, true);\n      }\n    };\n\n    const updateShow = value => emit(\"update:show\", value);\n\n    const renderMonth = (date, index) => {\n      const showMonthTitle = index !== 0 || !props.showSubtitle;\n      return _createVNode(CalendarMonth, _mergeProps({\n        \"ref\": setMonthRefs(index),\n        \"date\": date,\n        \"currentDate\": currentDate.value,\n        \"showMonthTitle\": showMonthTitle,\n        \"firstDayOfWeek\": dayOffset.value\n      }, pick(props, [\"type\", \"color\", \"minDate\", \"maxDate\", \"showMark\", \"formatter\", \"rowHeight\", \"lazyRender\", \"showSubtitle\", \"allowSameDay\"]), {\n        \"onClick\": onClickDay\n      }), pick(slots, [\"top-info\", \"bottom-info\"]));\n    };\n\n    const renderFooterButton = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n\n      if (props.showConfirm) {\n        const slot = slots[\"confirm-text\"];\n        const disabled = buttonDisabled.value;\n        const text = disabled ? props.confirmDisabledText : props.confirmText;\n        return _createVNode(Button, {\n          \"round\": true,\n          \"block\": true,\n          \"type\": \"danger\",\n          \"color\": props.color,\n          \"class\": bem(\"confirm\"),\n          \"disabled\": disabled,\n          \"nativeType\": \"button\",\n          \"onClick\": onConfirm\n        }, {\n          default: () => [slot ? slot({\n            disabled\n          }) : text || t(\"confirm\")]\n        });\n      }\n    };\n\n    const renderFooter = () => _createVNode(\"div\", {\n      \"class\": [bem(\"footer\"), {\n        \"van-safe-area-bottom\": props.safeAreaInsetBottom\n      }]\n    }, [renderFooterButton()]);\n\n    const renderCalendar = () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [_createVNode(CalendarHeader, {\n      \"title\": props.title,\n      \"subtitle\": subtitle.value,\n      \"showTitle\": props.showTitle,\n      \"showSubtitle\": props.showSubtitle,\n      \"firstDayOfWeek\": dayOffset.value,\n      \"onClick-subtitle\": event => emit(\"click-subtitle\", event)\n    }, pick(slots, [\"title\", \"subtitle\"])), _createVNode(\"div\", {\n      \"ref\": bodyRef,\n      \"class\": bem(\"body\"),\n      \"onScroll\": onScroll\n    }, [months.value.map(renderMonth)]), renderFooter()]);\n\n    watch(() => props.show, init);\n    watch(() => [props.type, props.minDate, props.maxDate], () => reset(getInitialDate(currentDate.value)));\n    watch(() => props.defaultDate, (value = null) => {\n      currentDate.value = value;\n      scrollToCurrentDate();\n    });\n    useExpose({\n      reset,\n      scrollToDate,\n      getSelectedDate\n    });\n    onMountedOrActivated(init);\n    return () => {\n      if (props.poppable) {\n        return _createVNode(Popup, {\n          \"show\": props.show,\n          \"class\": bem(\"popup\"),\n          \"round\": props.round,\n          \"position\": props.position,\n          \"closeable\": props.showTitle || props.showSubtitle,\n          \"teleport\": props.teleport,\n          \"closeOnPopstate\": props.closeOnPopstate,\n          \"safeAreaInsetTop\": props.safeAreaInsetTop,\n          \"closeOnClickOverlay\": props.closeOnClickOverlay,\n          \"onUpdate:show\": updateShow\n        }, {\n          default: renderCalendar\n        });\n      }\n\n      return renderCalendar();\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","ref","watch","computed","defineComponent","pick","isDate","truthProp","numericProp","getScrollTop","makeStringProp","makeNumericProp","t","bem","name","getToday","cloneDate","cloneDates","getPrevDay","getNextDay","compareDay","calcDateNum","compareMonth","getDayByOffset","raf","useRect","onMountedOrActivated","useRefs","useExpose","Popup","Button","Toast","CalendarMonth","CalendarHeader","calendarProps","show","Boolean","type","title","String","color","round","readonly","poppable","maxRange","position","teleport","Object","showMark","showTitle","formatter","Function","rowHeight","confirmText","rangePrompt","lazyRender","showConfirm","defaultDate","Date","Array","allowSameDay","showSubtitle","closeOnPopstate","showRangePrompt","confirmDisabledText","closeOnClickOverlay","safeAreaInsetTop","safeAreaInsetBottom","minDate","validator","default","maxDate","now","getFullYear","getMonth","getDate","firstDayOfWeek","val","stdin_default","props","emits","setup","emit","slots","limitDateRange","date","getInitialDate","isArray","start","end","map","bodyHeight","bodyRef","subtitle","currentDate","monthRefs","setMonthRefs","dayOffset","months","months2","cursor","setDate","push","setMonth","buttonDisabled","value","length","getSelectedDate","onScroll","top","bottom","heights","item","index","getHeight","heightSum","reduce","a","b","height","currentMonth","visibleRange","i","month","visible","showed","getTitle","forEach","setVisible","scrollToDate","targetDate","some","scrollToCurrentDate","init","Math","floor","reset","checkRange","onConfirm","_a","select","complete","setCurrentDate","date2","valid","getDisabledDate","disabledDays2","startDay","find","day","disabledDays","arr","ref2","_b","onClickDay","endDay","compareToStart","disabledDay","endDay2","dates","selectedIndex","findIndex","dateItem","unselectedDate","splice","updateShow","renderMonth","showMonthTitle","renderFooterButton","footer","slot","disabled","text","renderFooter","renderCalendar","event"],"sources":["/Users/niweixing/Downloads/web-code/node_modules/vant/es/calendar/Calendar.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, isDate, truthProp, numericProp, getScrollTop, makeStringProp, makeNumericProp } from \"../utils/index.mjs\";\nimport { t, bem, name, getToday, cloneDate, cloneDates, getPrevDay, getNextDay, compareDay, calcDateNum, compareMonth, getDayByOffset } from \"./utils.mjs\";\nimport { raf, useRect, onMountedOrActivated } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Popup } from \"../popup/index.mjs\";\nimport { Button } from \"../button/index.mjs\";\nimport { Toast } from \"../toast/index.mjs\";\nimport CalendarMonth from \"./CalendarMonth.mjs\";\nimport CalendarHeader from \"./CalendarHeader.mjs\";\nconst calendarProps = {\n  show: Boolean,\n  type: makeStringProp(\"single\"),\n  title: String,\n  color: String,\n  round: truthProp,\n  readonly: Boolean,\n  poppable: truthProp,\n  maxRange: makeNumericProp(null),\n  position: makeStringProp(\"bottom\"),\n  teleport: [String, Object],\n  showMark: truthProp,\n  showTitle: truthProp,\n  formatter: Function,\n  rowHeight: numericProp,\n  confirmText: String,\n  rangePrompt: String,\n  lazyRender: truthProp,\n  showConfirm: truthProp,\n  defaultDate: [Date, Array],\n  allowSameDay: Boolean,\n  showSubtitle: truthProp,\n  closeOnPopstate: truthProp,\n  showRangePrompt: truthProp,\n  confirmDisabledText: String,\n  closeOnClickOverlay: truthProp,\n  safeAreaInsetTop: Boolean,\n  safeAreaInsetBottom: truthProp,\n  minDate: {\n    type: Date,\n    validator: isDate,\n    default: getToday\n  },\n  maxDate: {\n    type: Date,\n    validator: isDate,\n    default: () => {\n      const now = getToday();\n      return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());\n    }\n  },\n  firstDayOfWeek: {\n    type: numericProp,\n    default: 0,\n    validator: (val) => val >= 0 && val <= 6\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"unselect\", \"month-show\", \"over-range\", \"update:show\", \"click-subtitle\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const limitDateRange = (date, minDate = props.minDate, maxDate = props.maxDate) => {\n      if (compareDay(date, minDate) === -1) {\n        return minDate;\n      }\n      if (compareDay(date, maxDate) === 1) {\n        return maxDate;\n      }\n      return date;\n    };\n    const getInitialDate = (defaultDate = props.defaultDate) => {\n      const {\n        type,\n        minDate,\n        maxDate,\n        allowSameDay\n      } = props;\n      if (defaultDate === null) {\n        return defaultDate;\n      }\n      const now = getToday();\n      if (type === \"range\") {\n        if (!Array.isArray(defaultDate)) {\n          defaultDate = [];\n        }\n        const start = limitDateRange(defaultDate[0] || now, minDate, allowSameDay ? maxDate : getPrevDay(maxDate));\n        const end = limitDateRange(defaultDate[1] || now, allowSameDay ? minDate : getNextDay(minDate));\n        return [start, end];\n      }\n      if (type === \"multiple\") {\n        if (Array.isArray(defaultDate)) {\n          return defaultDate.map((date) => limitDateRange(date));\n        }\n        return [limitDateRange(now)];\n      }\n      if (!defaultDate || Array.isArray(defaultDate)) {\n        defaultDate = now;\n      }\n      return limitDateRange(defaultDate);\n    };\n    let bodyHeight;\n    const bodyRef = ref();\n    const subtitle = ref(\"\");\n    const currentDate = ref(getInitialDate());\n    const [monthRefs, setMonthRefs] = useRefs();\n    const dayOffset = computed(() => props.firstDayOfWeek ? +props.firstDayOfWeek % 7 : 0);\n    const months = computed(() => {\n      const months2 = [];\n      const cursor = new Date(props.minDate);\n      cursor.setDate(1);\n      do {\n        months2.push(new Date(cursor));\n        cursor.setMonth(cursor.getMonth() + 1);\n      } while (compareMonth(cursor, props.maxDate) !== 1);\n      return months2;\n    });\n    const buttonDisabled = computed(() => {\n      if (currentDate.value) {\n        if (props.type === \"range\") {\n          return !currentDate.value[0] || !currentDate.value[1];\n        }\n        if (props.type === \"multiple\") {\n          return !currentDate.value.length;\n        }\n      }\n      return !currentDate.value;\n    });\n    const getSelectedDate = () => currentDate.value;\n    const onScroll = () => {\n      const top = getScrollTop(bodyRef.value);\n      const bottom = top + bodyHeight;\n      const heights = months.value.map((item, index) => monthRefs.value[index].getHeight());\n      const heightSum = heights.reduce((a, b) => a + b, 0);\n      if (bottom > heightSum && top > 0) {\n        return;\n      }\n      let height = 0;\n      let currentMonth;\n      const visibleRange = [-1, -1];\n      for (let i = 0; i < months.value.length; i++) {\n        const month = monthRefs.value[i];\n        const visible = height <= bottom && height + heights[i] >= top;\n        if (visible) {\n          visibleRange[1] = i;\n          if (!currentMonth) {\n            currentMonth = month;\n            visibleRange[0] = i;\n          }\n          if (!monthRefs.value[i].showed) {\n            monthRefs.value[i].showed = true;\n            emit(\"month-show\", {\n              date: month.date,\n              title: month.getTitle()\n            });\n          }\n        }\n        height += heights[i];\n      }\n      months.value.forEach((month, index) => {\n        const visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;\n        monthRefs.value[index].setVisible(visible);\n      });\n      if (currentMonth) {\n        subtitle.value = currentMonth.getTitle();\n      }\n    };\n    const scrollToDate = (targetDate) => {\n      raf(() => {\n        months.value.some((month, index) => {\n          if (compareMonth(month, targetDate) === 0) {\n            if (bodyRef.value) {\n              monthRefs.value[index].scrollToDate(bodyRef.value, targetDate);\n            }\n            return true;\n          }\n          return false;\n        });\n        onScroll();\n      });\n    };\n    const scrollToCurrentDate = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      if (currentDate.value) {\n        const targetDate = props.type === \"single\" ? currentDate.value : currentDate.value[0];\n        if (isDate(targetDate)) {\n          scrollToDate(targetDate);\n        }\n      } else {\n        raf(onScroll);\n      }\n    };\n    const init = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      raf(() => {\n        bodyHeight = Math.floor(useRect(bodyRef).height);\n      });\n      scrollToCurrentDate();\n    };\n    const reset = (date = getInitialDate()) => {\n      currentDate.value = date;\n      scrollToCurrentDate();\n    };\n    const checkRange = (date) => {\n      const {\n        maxRange,\n        rangePrompt,\n        showRangePrompt\n      } = props;\n      if (maxRange && calcDateNum(date) > maxRange) {\n        if (showRangePrompt) {\n          Toast(rangePrompt || t(\"rangePrompt\", maxRange));\n        }\n        emit(\"over-range\");\n        return false;\n      }\n      return true;\n    };\n    const onConfirm = () => {\n      var _a;\n      return emit(\"confirm\", (_a = currentDate.value) != null ? _a : cloneDates(currentDate.value));\n    };\n    const select = (date, complete) => {\n      const setCurrentDate = (date2) => {\n        currentDate.value = date2;\n        emit(\"select\", cloneDates(date2));\n      };\n      if (complete && props.type === \"range\") {\n        const valid = checkRange(date);\n        if (!valid) {\n          setCurrentDate([date[0], getDayByOffset(date[0], +props.maxRange - 1)]);\n          return;\n        }\n      }\n      setCurrentDate(date);\n      if (complete && !props.showConfirm) {\n        onConfirm();\n      }\n    };\n    const getDisabledDate = (disabledDays2, startDay, date) => {\n      var _a;\n      return (_a = disabledDays2.find((day) => compareDay(startDay, day.date) === -1 && compareDay(day.date, date) === -1)) == null ? void 0 : _a.date;\n    };\n    const disabledDays = computed(() => monthRefs.value.reduce((arr, ref2) => {\n      var _a, _b;\n      arr.push(...(_b = (_a = ref2.disabledDays) == null ? void 0 : _a.value) != null ? _b : []);\n      return arr;\n    }, []));\n    const onClickDay = (item) => {\n      if (props.readonly || !item.date) {\n        return;\n      }\n      const {\n        date\n      } = item;\n      const {\n        type\n      } = props;\n      if (type === \"range\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const [startDay, endDay] = currentDate.value;\n        if (startDay && !endDay) {\n          const compareToStart = compareDay(date, startDay);\n          if (compareToStart === 1) {\n            const disabledDay = getDisabledDate(disabledDays.value, startDay, date);\n            if (disabledDay) {\n              const endDay2 = getPrevDay(disabledDay);\n              if (compareDay(startDay, endDay2) === -1) {\n                select([startDay, endDay2]);\n              } else {\n                select([date]);\n              }\n            } else {\n              select([startDay, date], true);\n            }\n          } else if (compareToStart === -1) {\n            select([date]);\n          } else if (props.allowSameDay) {\n            select([date, date], true);\n          }\n        } else {\n          select([date]);\n        }\n      } else if (type === \"multiple\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const dates = currentDate.value;\n        const selectedIndex = dates.findIndex((dateItem) => compareDay(dateItem, date) === 0);\n        if (selectedIndex !== -1) {\n          const [unselectedDate] = dates.splice(selectedIndex, 1);\n          emit(\"unselect\", cloneDate(unselectedDate));\n        } else if (props.maxRange && dates.length >= props.maxRange) {\n          Toast(props.rangePrompt || t(\"rangePrompt\", props.maxRange));\n        } else {\n          select([...dates, date]);\n        }\n      } else {\n        select(date, true);\n      }\n    };\n    const updateShow = (value) => emit(\"update:show\", value);\n    const renderMonth = (date, index) => {\n      const showMonthTitle = index !== 0 || !props.showSubtitle;\n      return _createVNode(CalendarMonth, _mergeProps({\n        \"ref\": setMonthRefs(index),\n        \"date\": date,\n        \"currentDate\": currentDate.value,\n        \"showMonthTitle\": showMonthTitle,\n        \"firstDayOfWeek\": dayOffset.value\n      }, pick(props, [\"type\", \"color\", \"minDate\", \"maxDate\", \"showMark\", \"formatter\", \"rowHeight\", \"lazyRender\", \"showSubtitle\", \"allowSameDay\"]), {\n        \"onClick\": onClickDay\n      }), pick(slots, [\"top-info\", \"bottom-info\"]));\n    };\n    const renderFooterButton = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n      if (props.showConfirm) {\n        const slot = slots[\"confirm-text\"];\n        const disabled = buttonDisabled.value;\n        const text = disabled ? props.confirmDisabledText : props.confirmText;\n        return _createVNode(Button, {\n          \"round\": true,\n          \"block\": true,\n          \"type\": \"danger\",\n          \"color\": props.color,\n          \"class\": bem(\"confirm\"),\n          \"disabled\": disabled,\n          \"nativeType\": \"button\",\n          \"onClick\": onConfirm\n        }, {\n          default: () => [slot ? slot({\n            disabled\n          }) : text || t(\"confirm\")]\n        });\n      }\n    };\n    const renderFooter = () => _createVNode(\"div\", {\n      \"class\": [bem(\"footer\"), {\n        \"van-safe-area-bottom\": props.safeAreaInsetBottom\n      }]\n    }, [renderFooterButton()]);\n    const renderCalendar = () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [_createVNode(CalendarHeader, {\n      \"title\": props.title,\n      \"subtitle\": subtitle.value,\n      \"showTitle\": props.showTitle,\n      \"showSubtitle\": props.showSubtitle,\n      \"firstDayOfWeek\": dayOffset.value,\n      \"onClick-subtitle\": (event) => emit(\"click-subtitle\", event)\n    }, pick(slots, [\"title\", \"subtitle\"])), _createVNode(\"div\", {\n      \"ref\": bodyRef,\n      \"class\": bem(\"body\"),\n      \"onScroll\": onScroll\n    }, [months.value.map(renderMonth)]), renderFooter()]);\n    watch(() => props.show, init);\n    watch(() => [props.type, props.minDate, props.maxDate], () => reset(getInitialDate(currentDate.value)));\n    watch(() => props.defaultDate, (value = null) => {\n      currentDate.value = value;\n      scrollToCurrentDate();\n    });\n    useExpose({\n      reset,\n      scrollToDate,\n      getSelectedDate\n    });\n    onMountedOrActivated(init);\n    return () => {\n      if (props.poppable) {\n        return _createVNode(Popup, {\n          \"show\": props.show,\n          \"class\": bem(\"popup\"),\n          \"round\": props.round,\n          \"position\": props.position,\n          \"closeable\": props.showTitle || props.showSubtitle,\n          \"teleport\": props.teleport,\n          \"closeOnPopstate\": props.closeOnPopstate,\n          \"safeAreaInsetTop\": props.safeAreaInsetTop,\n          \"closeOnClickOverlay\": props.closeOnClickOverlay,\n          \"onUpdate:show\": updateShow\n        }, {\n          default: renderCalendar\n        });\n      }\n      return renderCalendar();\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}