{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, computed, onMounted, onActivated, onDeactivated, onBeforeUnmount, defineComponent, nextTick } from \"vue\";\nimport { clamp, isHidden, truthProp, numericProp, windowWidth, windowHeight, preventDefault, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { doubleRaf, useChildren, useEventListener, usePageVisibility } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen.mjs\";\nconst [name, bem] = createNamespace(\"swipe\");\nconst swipeProps = {\n  loop: truthProp,\n  width: numericProp,\n  height: numericProp,\n  vertical: Boolean,\n  autoplay: makeNumericProp(0),\n  duration: makeNumericProp(500),\n  touchable: truthProp,\n  lazyRender: Boolean,\n  initialSwipe: makeNumericProp(0),\n  indicatorColor: String,\n  showIndicators: truthProp,\n  stopPropagation: truthProp\n};\nconst SWIPE_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: swipeProps,\n  emits: [\"change\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const track = ref();\n    const state = reactive({\n      rect: null,\n      width: 0,\n      height: 0,\n      offset: 0,\n      active: 0,\n      swiping: false\n    });\n    const touch = useTouch();\n    const {\n      children,\n      linkChildren\n    } = useChildren(SWIPE_KEY);\n    const count = computed(() => children.length);\n    const size = computed(() => state[props.vertical ? \"height\" : \"width\"]);\n    const delta = computed(() => props.vertical ? touch.deltaY.value : touch.deltaX.value);\n    const minOffset = computed(() => {\n      if (state.rect) {\n        const base = props.vertical ? state.rect.height : state.rect.width;\n        return base - size.value * count.value;\n      }\n\n      return 0;\n    });\n    const maxCount = computed(() => Math.ceil(Math.abs(minOffset.value) / size.value));\n    const trackSize = computed(() => count.value * size.value);\n    const activeIndicator = computed(() => (state.active + count.value) % count.value);\n    const isCorrectDirection = computed(() => {\n      const expect = props.vertical ? \"vertical\" : \"horizontal\";\n      return touch.direction.value === expect;\n    });\n    const trackStyle = computed(() => {\n      const style = {\n        transitionDuration: `${state.swiping ? 0 : props.duration}ms`,\n        transform: `translate${props.vertical ? \"Y\" : \"X\"}(${state.offset}px)`\n      };\n\n      if (size.value) {\n        const mainAxis = props.vertical ? \"height\" : \"width\";\n        const crossAxis = props.vertical ? \"width\" : \"height\";\n        style[mainAxis] = `${trackSize.value}px`;\n        style[crossAxis] = props[crossAxis] ? `${props[crossAxis]}px` : \"\";\n      }\n\n      return style;\n    });\n\n    const getTargetActive = pace => {\n      const {\n        active\n      } = state;\n\n      if (pace) {\n        if (props.loop) {\n          return clamp(active + pace, -1, count.value);\n        }\n\n        return clamp(active + pace, 0, maxCount.value);\n      }\n\n      return active;\n    };\n\n    const getTargetOffset = (targetActive, offset = 0) => {\n      let currentPosition = targetActive * size.value;\n\n      if (!props.loop) {\n        currentPosition = Math.min(currentPosition, -minOffset.value);\n      }\n\n      let targetOffset = offset - currentPosition;\n\n      if (!props.loop) {\n        targetOffset = clamp(targetOffset, minOffset.value, 0);\n      }\n\n      return targetOffset;\n    };\n\n    const move = ({\n      pace = 0,\n      offset = 0,\n      emitChange\n    }) => {\n      if (count.value <= 1) {\n        return;\n      }\n\n      const {\n        active\n      } = state;\n      const targetActive = getTargetActive(pace);\n      const targetOffset = getTargetOffset(targetActive, offset);\n\n      if (props.loop) {\n        if (children[0] && targetOffset !== minOffset.value) {\n          const outRightBound = targetOffset < minOffset.value;\n          children[0].setOffset(outRightBound ? trackSize.value : 0);\n        }\n\n        if (children[count.value - 1] && targetOffset !== 0) {\n          const outLeftBound = targetOffset > 0;\n          children[count.value - 1].setOffset(outLeftBound ? -trackSize.value : 0);\n        }\n      }\n\n      state.active = targetActive;\n      state.offset = targetOffset;\n\n      if (emitChange && targetActive !== active) {\n        emit(\"change\", activeIndicator.value);\n      }\n    };\n\n    const correctPosition = () => {\n      state.swiping = true;\n\n      if (state.active <= -1) {\n        move({\n          pace: count.value\n        });\n      } else if (state.active >= count.value) {\n        move({\n          pace: -count.value\n        });\n      }\n    };\n\n    const prev = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: -1,\n          emitChange: true\n        });\n      });\n    };\n\n    const next = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: 1,\n          emitChange: true\n        });\n      });\n    };\n\n    let autoplayTimer;\n\n    const stopAutoplay = () => clearTimeout(autoplayTimer);\n\n    const autoplay = () => {\n      stopAutoplay();\n\n      if (props.autoplay > 0 && count.value > 1) {\n        autoplayTimer = setTimeout(() => {\n          next();\n          autoplay();\n        }, +props.autoplay);\n      }\n    };\n\n    const initialize = (active = +props.initialSwipe) => {\n      if (!root.value) {\n        return;\n      }\n\n      const cb = () => {\n        var _a, _b;\n\n        if (!isHidden(root)) {\n          const rect = {\n            width: root.value.offsetWidth,\n            height: root.value.offsetHeight\n          };\n          state.rect = rect;\n          state.width = +((_a = props.width) != null ? _a : rect.width);\n          state.height = +((_b = props.height) != null ? _b : rect.height);\n        }\n\n        if (count.value) {\n          active = Math.min(count.value - 1, active);\n        }\n\n        state.active = active;\n        state.swiping = true;\n        state.offset = getTargetOffset(active);\n        children.forEach(swipe => {\n          swipe.setOffset(0);\n        });\n        autoplay();\n      };\n\n      if (isHidden(root)) {\n        nextTick().then(cb);\n      } else {\n        cb();\n      }\n    };\n\n    const resize = () => initialize(state.active);\n\n    let touchStartTime;\n\n    const onTouchStart = event => {\n      if (!props.touchable) return;\n      touch.start(event);\n      touchStartTime = Date.now();\n      stopAutoplay();\n      correctPosition();\n    };\n\n    const onTouchMove = event => {\n      if (props.touchable && state.swiping) {\n        touch.move(event);\n\n        if (isCorrectDirection.value) {\n          const isEdgeTouch = !props.loop && (state.active === 0 && delta.value > 0 || state.active === count.value - 1 && delta.value < 0);\n\n          if (!isEdgeTouch) {\n            preventDefault(event, props.stopPropagation);\n            move({\n              offset: delta.value\n            });\n          }\n        }\n      }\n    };\n\n    const onTouchEnd = () => {\n      if (!props.touchable || !state.swiping) {\n        return;\n      }\n\n      const duration = Date.now() - touchStartTime;\n      const speed = delta.value / duration;\n      const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta.value) > size.value / 2;\n\n      if (shouldSwipe && isCorrectDirection.value) {\n        const offset = props.vertical ? touch.offsetY.value : touch.offsetX.value;\n        let pace = 0;\n\n        if (props.loop) {\n          pace = offset > 0 ? delta.value > 0 ? -1 : 1 : 0;\n        } else {\n          pace = -Math[delta.value > 0 ? \"ceil\" : \"floor\"](delta.value / size.value);\n        }\n\n        move({\n          pace,\n          emitChange: true\n        });\n      } else if (delta.value) {\n        move({\n          pace: 0\n        });\n      }\n\n      state.swiping = false;\n      autoplay();\n    };\n\n    const swipeTo = (index, options = {}) => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        let targetIndex;\n\n        if (props.loop && index === count.value) {\n          targetIndex = state.active === 0 ? 0 : index;\n        } else {\n          targetIndex = index % count.value;\n        }\n\n        if (options.immediate) {\n          doubleRaf(() => {\n            state.swiping = false;\n          });\n        } else {\n          state.swiping = false;\n        }\n\n        move({\n          pace: targetIndex - state.active,\n          emitChange: true\n        });\n      });\n    };\n\n    const renderDot = (_, index) => {\n      const active = index === activeIndicator.value;\n      const style = active ? {\n        backgroundColor: props.indicatorColor\n      } : void 0;\n      return _createVNode(\"i\", {\n        \"style\": style,\n        \"class\": bem(\"indicator\", {\n          active\n        })\n      }, null);\n    };\n\n    const renderIndicator = () => {\n      if (slots.indicator) {\n        return slots.indicator({\n          active: activeIndicator.value,\n          total: count.value\n        });\n      }\n\n      if (props.showIndicators && count.value > 1) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"indicators\", {\n            vertical: props.vertical\n          })\n        }, [Array(count.value).fill(\"\").map(renderDot)]);\n      }\n    };\n\n    useExpose({\n      prev,\n      next,\n      state,\n      resize,\n      swipeTo\n    });\n    linkChildren({\n      size,\n      props,\n      count,\n      activeIndicator\n    });\n    watch(() => props.initialSwipe, value => initialize(+value));\n    watch(count, () => initialize(state.active));\n    watch(() => props.autoplay, autoplay);\n    watch([windowWidth, windowHeight], resize);\n    watch(usePageVisibility(), visible => {\n      if (visible === \"visible\") {\n        autoplay();\n      } else {\n        stopAutoplay();\n      }\n    });\n    onMounted(initialize);\n    onActivated(() => initialize(state.active));\n    onPopupReopen(() => initialize(state.active));\n    onDeactivated(stopAutoplay);\n    onBeforeUnmount(stopAutoplay);\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: track\n    });\n    return () => {\n      var _a;\n\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"ref\": track,\n        \"style\": trackStyle.value,\n        \"class\": bem(\"track\", {\n          vertical: props.vertical\n        }),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]), renderIndicator()]);\n    };\n  }\n\n});\nexport { SWIPE_KEY, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","ref","watch","reactive","computed","onMounted","onActivated","onDeactivated","onBeforeUnmount","defineComponent","nextTick","clamp","isHidden","truthProp","numericProp","windowWidth","windowHeight","preventDefault","createNamespace","makeNumericProp","doubleRaf","useChildren","useEventListener","usePageVisibility","useTouch","useExpose","onPopupReopen","name","bem","swipeProps","loop","width","height","vertical","Boolean","autoplay","duration","touchable","lazyRender","initialSwipe","indicatorColor","String","showIndicators","stopPropagation","SWIPE_KEY","Symbol","stdin_default","props","emits","setup","emit","slots","root","track","state","rect","offset","active","swiping","touch","children","linkChildren","count","length","size","delta","deltaY","value","deltaX","minOffset","base","maxCount","Math","ceil","abs","trackSize","activeIndicator","isCorrectDirection","expect","direction","trackStyle","style","transitionDuration","transform","mainAxis","crossAxis","getTargetActive","pace","getTargetOffset","targetActive","currentPosition","min","targetOffset","move","emitChange","outRightBound","setOffset","outLeftBound","correctPosition","prev","reset","next","autoplayTimer","stopAutoplay","clearTimeout","setTimeout","initialize","cb","_a","_b","offsetWidth","offsetHeight","forEach","swipe","then","resize","touchStartTime","onTouchStart","event","start","Date","now","onTouchMove","isEdgeTouch","onTouchEnd","speed","shouldSwipe","offsetY","offsetX","swipeTo","index","options","targetIndex","immediate","renderDot","_","backgroundColor","renderIndicator","indicator","total","Array","fill","map","visible","target","default","call"],"sources":["/Users/niweixing/Downloads/web-code/node_modules/vant/es/swipe/Swipe.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, reactive, computed, onMounted, onActivated, onDeactivated, onBeforeUnmount, defineComponent, nextTick } from \"vue\";\nimport { clamp, isHidden, truthProp, numericProp, windowWidth, windowHeight, preventDefault, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { doubleRaf, useChildren, useEventListener, usePageVisibility } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { onPopupReopen } from \"../composables/on-popup-reopen.mjs\";\nconst [name, bem] = createNamespace(\"swipe\");\nconst swipeProps = {\n  loop: truthProp,\n  width: numericProp,\n  height: numericProp,\n  vertical: Boolean,\n  autoplay: makeNumericProp(0),\n  duration: makeNumericProp(500),\n  touchable: truthProp,\n  lazyRender: Boolean,\n  initialSwipe: makeNumericProp(0),\n  indicatorColor: String,\n  showIndicators: truthProp,\n  stopPropagation: truthProp\n};\nconst SWIPE_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: swipeProps,\n  emits: [\"change\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const root = ref();\n    const track = ref();\n    const state = reactive({\n      rect: null,\n      width: 0,\n      height: 0,\n      offset: 0,\n      active: 0,\n      swiping: false\n    });\n    const touch = useTouch();\n    const {\n      children,\n      linkChildren\n    } = useChildren(SWIPE_KEY);\n    const count = computed(() => children.length);\n    const size = computed(() => state[props.vertical ? \"height\" : \"width\"]);\n    const delta = computed(() => props.vertical ? touch.deltaY.value : touch.deltaX.value);\n    const minOffset = computed(() => {\n      if (state.rect) {\n        const base = props.vertical ? state.rect.height : state.rect.width;\n        return base - size.value * count.value;\n      }\n      return 0;\n    });\n    const maxCount = computed(() => Math.ceil(Math.abs(minOffset.value) / size.value));\n    const trackSize = computed(() => count.value * size.value);\n    const activeIndicator = computed(() => (state.active + count.value) % count.value);\n    const isCorrectDirection = computed(() => {\n      const expect = props.vertical ? \"vertical\" : \"horizontal\";\n      return touch.direction.value === expect;\n    });\n    const trackStyle = computed(() => {\n      const style = {\n        transitionDuration: `${state.swiping ? 0 : props.duration}ms`,\n        transform: `translate${props.vertical ? \"Y\" : \"X\"}(${state.offset}px)`\n      };\n      if (size.value) {\n        const mainAxis = props.vertical ? \"height\" : \"width\";\n        const crossAxis = props.vertical ? \"width\" : \"height\";\n        style[mainAxis] = `${trackSize.value}px`;\n        style[crossAxis] = props[crossAxis] ? `${props[crossAxis]}px` : \"\";\n      }\n      return style;\n    });\n    const getTargetActive = (pace) => {\n      const {\n        active\n      } = state;\n      if (pace) {\n        if (props.loop) {\n          return clamp(active + pace, -1, count.value);\n        }\n        return clamp(active + pace, 0, maxCount.value);\n      }\n      return active;\n    };\n    const getTargetOffset = (targetActive, offset = 0) => {\n      let currentPosition = targetActive * size.value;\n      if (!props.loop) {\n        currentPosition = Math.min(currentPosition, -minOffset.value);\n      }\n      let targetOffset = offset - currentPosition;\n      if (!props.loop) {\n        targetOffset = clamp(targetOffset, minOffset.value, 0);\n      }\n      return targetOffset;\n    };\n    const move = ({\n      pace = 0,\n      offset = 0,\n      emitChange\n    }) => {\n      if (count.value <= 1) {\n        return;\n      }\n      const {\n        active\n      } = state;\n      const targetActive = getTargetActive(pace);\n      const targetOffset = getTargetOffset(targetActive, offset);\n      if (props.loop) {\n        if (children[0] && targetOffset !== minOffset.value) {\n          const outRightBound = targetOffset < minOffset.value;\n          children[0].setOffset(outRightBound ? trackSize.value : 0);\n        }\n        if (children[count.value - 1] && targetOffset !== 0) {\n          const outLeftBound = targetOffset > 0;\n          children[count.value - 1].setOffset(outLeftBound ? -trackSize.value : 0);\n        }\n      }\n      state.active = targetActive;\n      state.offset = targetOffset;\n      if (emitChange && targetActive !== active) {\n        emit(\"change\", activeIndicator.value);\n      }\n    };\n    const correctPosition = () => {\n      state.swiping = true;\n      if (state.active <= -1) {\n        move({\n          pace: count.value\n        });\n      } else if (state.active >= count.value) {\n        move({\n          pace: -count.value\n        });\n      }\n    };\n    const prev = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: -1,\n          emitChange: true\n        });\n      });\n    };\n    const next = () => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        state.swiping = false;\n        move({\n          pace: 1,\n          emitChange: true\n        });\n      });\n    };\n    let autoplayTimer;\n    const stopAutoplay = () => clearTimeout(autoplayTimer);\n    const autoplay = () => {\n      stopAutoplay();\n      if (props.autoplay > 0 && count.value > 1) {\n        autoplayTimer = setTimeout(() => {\n          next();\n          autoplay();\n        }, +props.autoplay);\n      }\n    };\n    const initialize = (active = +props.initialSwipe) => {\n      if (!root.value) {\n        return;\n      }\n      const cb = () => {\n        var _a, _b;\n        if (!isHidden(root)) {\n          const rect = {\n            width: root.value.offsetWidth,\n            height: root.value.offsetHeight\n          };\n          state.rect = rect;\n          state.width = +((_a = props.width) != null ? _a : rect.width);\n          state.height = +((_b = props.height) != null ? _b : rect.height);\n        }\n        if (count.value) {\n          active = Math.min(count.value - 1, active);\n        }\n        state.active = active;\n        state.swiping = true;\n        state.offset = getTargetOffset(active);\n        children.forEach((swipe) => {\n          swipe.setOffset(0);\n        });\n        autoplay();\n      };\n      if (isHidden(root)) {\n        nextTick().then(cb);\n      } else {\n        cb();\n      }\n    };\n    const resize = () => initialize(state.active);\n    let touchStartTime;\n    const onTouchStart = (event) => {\n      if (!props.touchable)\n        return;\n      touch.start(event);\n      touchStartTime = Date.now();\n      stopAutoplay();\n      correctPosition();\n    };\n    const onTouchMove = (event) => {\n      if (props.touchable && state.swiping) {\n        touch.move(event);\n        if (isCorrectDirection.value) {\n          const isEdgeTouch = !props.loop && (state.active === 0 && delta.value > 0 || state.active === count.value - 1 && delta.value < 0);\n          if (!isEdgeTouch) {\n            preventDefault(event, props.stopPropagation);\n            move({\n              offset: delta.value\n            });\n          }\n        }\n      }\n    };\n    const onTouchEnd = () => {\n      if (!props.touchable || !state.swiping) {\n        return;\n      }\n      const duration = Date.now() - touchStartTime;\n      const speed = delta.value / duration;\n      const shouldSwipe = Math.abs(speed) > 0.25 || Math.abs(delta.value) > size.value / 2;\n      if (shouldSwipe && isCorrectDirection.value) {\n        const offset = props.vertical ? touch.offsetY.value : touch.offsetX.value;\n        let pace = 0;\n        if (props.loop) {\n          pace = offset > 0 ? delta.value > 0 ? -1 : 1 : 0;\n        } else {\n          pace = -Math[delta.value > 0 ? \"ceil\" : \"floor\"](delta.value / size.value);\n        }\n        move({\n          pace,\n          emitChange: true\n        });\n      } else if (delta.value) {\n        move({\n          pace: 0\n        });\n      }\n      state.swiping = false;\n      autoplay();\n    };\n    const swipeTo = (index, options = {}) => {\n      correctPosition();\n      touch.reset();\n      doubleRaf(() => {\n        let targetIndex;\n        if (props.loop && index === count.value) {\n          targetIndex = state.active === 0 ? 0 : index;\n        } else {\n          targetIndex = index % count.value;\n        }\n        if (options.immediate) {\n          doubleRaf(() => {\n            state.swiping = false;\n          });\n        } else {\n          state.swiping = false;\n        }\n        move({\n          pace: targetIndex - state.active,\n          emitChange: true\n        });\n      });\n    };\n    const renderDot = (_, index) => {\n      const active = index === activeIndicator.value;\n      const style = active ? {\n        backgroundColor: props.indicatorColor\n      } : void 0;\n      return _createVNode(\"i\", {\n        \"style\": style,\n        \"class\": bem(\"indicator\", {\n          active\n        })\n      }, null);\n    };\n    const renderIndicator = () => {\n      if (slots.indicator) {\n        return slots.indicator({\n          active: activeIndicator.value,\n          total: count.value\n        });\n      }\n      if (props.showIndicators && count.value > 1) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"indicators\", {\n            vertical: props.vertical\n          })\n        }, [Array(count.value).fill(\"\").map(renderDot)]);\n      }\n    };\n    useExpose({\n      prev,\n      next,\n      state,\n      resize,\n      swipeTo\n    });\n    linkChildren({\n      size,\n      props,\n      count,\n      activeIndicator\n    });\n    watch(() => props.initialSwipe, (value) => initialize(+value));\n    watch(count, () => initialize(state.active));\n    watch(() => props.autoplay, autoplay);\n    watch([windowWidth, windowHeight], resize);\n    watch(usePageVisibility(), (visible) => {\n      if (visible === \"visible\") {\n        autoplay();\n      } else {\n        stopAutoplay();\n      }\n    });\n    onMounted(initialize);\n    onActivated(() => initialize(state.active));\n    onPopupReopen(() => initialize(state.active));\n    onDeactivated(stopAutoplay);\n    onBeforeUnmount(stopAutoplay);\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: track\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"ref\": track,\n        \"style\": trackStyle.value,\n        \"class\": bem(\"track\", {\n          vertical: props.vertical\n        }),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]), renderIndicator()]);\n    };\n  }\n});\nexport {\n  SWIPE_KEY,\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}